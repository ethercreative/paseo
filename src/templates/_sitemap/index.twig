{% extends '_layouts/cp' %}
{% from '_includes/forms' import lightswitch, select, text %}
{% set title = 'Sitemap'|t('paseo') %}
{% set fullPageForm = true %}
{% set selectedSubnavItem = 'sitemap' %}
{% set crumbs = [
	{ url: cpUrl('paseo'), label: 'Paseo' },
] %}

{% set changeFrequencyOpts = {
	'always': 'Always'|t('paseo'),
	'hourly': 'Hourly'|t('paseo'),
	'daily': 'Daily'|t('paseo'),
	'weekly': 'Weekly'|t('paseo'),
	'monthly': 'Monthly'|t('paseo'),
	'yearly': 'Yearly'|t('paseo'),
	'never': 'Never'|t('paseo'),
} %}

{% set priorityOpts = {
	'1.0': '1.0 (High)'|t('paseo'),
	'0.9': '0.9',
	'0.8': '0.8',
	'0.7': '0.7',
	'0.6': '0.6',
	'0.5': '0.5 (Normal)'|t('paseo'),
	'0.4': '0.4',
	'0.3': '0.3',
	'0.2': '0.2',
	'0.1': '0.1',
	'0.0': '0.0 (Low)'|t('paseo'),
} %}

{% block content %}

	<p style="color:red"><code>[TODO: Show urls / url structure for each row (show warning pill if no url)]</code></p>

	<input type="hidden" name="action" value="paseo/sitemap/save-rows">

	{% if not enabled %}
		<div class="paseo-warning">
			<h4>{{ 'Your sitemap isn\'t enabled!'|t('paseo') }}</h4>
			{{ 'These settings won\'t have any affect until you enable it. Visit the [sitemap settings]({settingsUrl}) to enable the sitemap.'|t('paseo', {
				'settingsUrl': cpUrl('paseo/settings/sitemap'),
			})|md }}
		</div>
	{% endif %}

	<div class="paseo-tip">
		<h4>{{ 'About your sitemap'|t('paseo') }}</h4>
		{{ 'Your sitemap will tell Google and other search engines about the most *important* pages on your site, and their relationship to media and other files (if you\'ve enabled that in the [sitemap settings]({settingsUrl})).'|t('paseo', {
			'settingsUrl': cpUrl('paseo/settings/sitemap'),
		})|md }}
		<p>{{ 'We recommend only enabling the pages that you think are most important such as landing pages, categories, products, etc., and disable utility pages like your privacy policy or contact page.'|t('paseo') }}</p>
	</div>

	<div class="paseo-tip">
		<h4>{{ 'Setting priority'|t('paseo') }}</h4>
		<p>{{ 'Priority should be set based on how important a page is. So landing pages and category pages should have a higher priority than product pages, for example. Google currently ignores the priority, but it\'s worth getting it correct anyway.'|t('paseo') }}</p>
	</div>

	{% for handle, group in groups if handle == 'custom' or group.rows|length %}
	{% set isCustom = handle == 'custom' %}
	{% if not loop.first %}<br>{% endif %}

	<h6>{{ group.label }}</h6>

	<ul class="paseo-groups"{% if isCustom %} id="paseoCustomUrls"{% endif %}>
		{% for row in group.rows %}
			<li class="paseo-group">
				<header>
					<button
						class="icon settings"
						title="{{ 'Edit'|t }} {{ row.name }}"
						type="button"
						data-paseo-toggle-row="{{ handle ~ row.groupId }}"
					>
						{{ row.name }}

						{% set uri = getMeta(row, 'uriFormat') %}
						{% if uri %}
							<span class="paseo-uri">
								{{- uri == '__home__' ? '/' : uri -}}
							</span>
						{% endif %}
					</button>

					{% if isCustom %}
						<button
							class="icon delete"
							title="{{ 'Delete'|t }} {{ row.name }}"
							type="button"
							data-paseo-delete="{{ handle ~ row.groupId }}"
						></button>
					{% endif %}
				</header>
				<div data-paseo-row="{{ handle ~ row.groupId }}" class="hidden">
					<table class="data fullwidth">
						<thead>
						<tr>
							<th>{{ 'Site'|t }}</th>
							{% if isCustom %}
								<th>URI</th>
							{% endif %}
							<th class="paseo-thin">{{ 'Frequency'|t('paseo') }}</th>
							<th class="paseo-thin">{{ 'Priority'|t('paseo') }}</th>
							<th class="paseo-thin">{{ 'Enabled'|t }}</th>
						</tr>
						</thead>
						<tbody>
						{% for site in sites %}
							<tr>
								{% set key = handle ~ '.' ~ row.groupId ~ '.' ~ site.id %}
								{% set name = 'row[' ~ key ~ ']' %}
								{% set record = rows[key] %}
								<td>
									<input type="hidden" name="{{ name }}[id]" value="{{ record.id }}">
									{{ site.name }}
								</td>
								{% if isCustom %}
									<td>
										<label class="paseo-url">
											{{ parseEnv(site.baseUrl) }}/
											{{ text({
												name: name ~ '[uri]',
												required: true,
												value: record.uri
											}) }}
										</label>
									</td>
								{% endif %}
								<td>
									{{ select({
										name: name ~ '[frequency]',
										options: changeFrequencyOpts,
										value: record.frequency,
									}) }}
								</td>
								<td>
									{{ select({
										name: name ~ '[priority]',
										options: priorityOpts,
										value: record.priority,
									}) }}
								</td>
								<td>
									{{ lightswitch({
										name: name ~ '[enabled]',
										on: record.enabled,
									}) }}
								</td>
							</tr>
						{% endfor %}
						</tbody>
					</table>
				</div>
			</li>
		{% endfor %}
	</ul>
	{% endfor %}

	<button type="button" id="paseoAddCustom" class="btn icon add">
		{{- 'Add Custom URL'|t -}}
	</button>

	<script type="text/html" id="paseoCustomUrlTemplate">
		<li class="paseo-group">
			<header>
				<button
					class="icon settings"
					title="{{ 'Edit'|t }} [[name]]"
					type="button"
					data-paseo-toggle-row="[[uid]]"
				>[[name]]</button>

				<button
					class="icon delete"
					title="{{ 'Delete'|t }} [[name]]"
					type="button"
					data-paseo-delete="[[uid]]"
				></button>
			</header>
			<div class="hidden">
				<table class="data fullwidth">
					<thead>
					<tr>
						<th>{{ 'Site'|t }}</th>
						<th>URI</th>
						<th class="paseo-thin">{{ 'Frequency'|t('paseo') }}</th>
						<th class="paseo-thin">{{ 'Priority'|t('paseo') }}</th>
						<th class="paseo-thin">{{ 'Enabled'|t }}</th>
					</tr>
					</thead>
					<tbody>
					{% for site in sites %}
						<tr>
							{% set name = 'row[custom.[[uid]].' ~ site.id ~ ']' %}
							<td>{{ site.name }}</td>
							<td>
								<label class="paseo-url">
									{{ parseEnv(site.baseUrl) }}/
									{{ text({
										name: name ~ '[uri]',
										required: true,
									}) }}
								</label>
							</td>
							<td>
								{{ select({
									name: name ~ '[frequency]',
									options: changeFrequencyOpts,
									value: 'monthly',
								}) }}
							</td>
							<td>
								{{ select({
									name: name ~ '[priority]',
									options: priorityOpts,
									value: 0.5,
								}) }}
							</td>
							<td>
								{{ lightswitch({
									name: name ~ '[enabled]',
									on: true,
								}) }}
							</td>
						</tr>
					{% endfor %}
					</tbody>
				</table>
			</div>
		</li>
	</script>

{% endblock %}

{% css %}
.paseo-groups {
	list-style: none;
}
.paseo-group > header {
	display: flex;
	align-items: stretch;
	justify-content: space-between;
	border-bottom: 1px solid #f4f4f4;
}
.paseo-group > div {
	padding: 13px 14px 14px;
	background-color: #f4f4f4;
}
.paseo-group button {
	appearance: none;
	background: none;
	border: none;
	border-radius: 0;
	cursor: pointer;
	font-size: 14px;
}
.paseo-group button:first-child {
	width: 100%;
	text-align: left;
	padding: 10px 8px;
}
.paseo-group button:first-child:before {
	margin-top: -1px;
	margin-right: 10px;
	color: rgba(0, 0, 0, 0.2);
}
.paseo-group button:first-child:hover:before {
	color: rgba(0, 0, 0, 0.75);
}
.paseo-thin {
	width: 7% !important;
}
.paseo-visible {
	display: block !important;
}
.paseo-url {
	display: flex;
	align-items: center;
	color: rgba(0, 0, 0, 0.5);
}
.paseo-url input {
	margin-left: 5px;
}
#paseoAddCustom {
	margin-top: 14px;
	font-size: 14px;
}
.paseo-uri {
	display: inline-block;
	margin-left: 10px;
	color: rgba(0,0,0,0.5);
}
{% endcss %}

{% js 'window.paseoCustomLabel = \'' ~ ('Custom URL'|t) ~ '\';' %}
{% js %}
!function () {

	// Properties
	// =========================================================================

	const rowToggles = document.querySelectorAll('button[data-paseo-toggle-row]')
		, rowExpands = document.querySelectorAll('div[data-paseo-row]')
		, customUrls = document.getElementById('paseoCustomUrls')
		, customTmpl = document.getElementById('paseoCustomUrlTemplate');

	let rows = {},
	    activeRow = null;

	// Actions
	// =========================================================================

	const onRowToggleClick = function (toggle) {
		const id = toggle.dataset.paseoToggleRow;

		if (activeRow)
			rows[activeRow].classList.add('hidden');

		if (activeRow === id) {
			activeRow = null;
			return;
		}

		activeRow = id;
		rows[activeRow].classList.remove('hidden');
	};

	const onRowDeleteClick = function (btn) {
		const uid = btn.dataset.paseoDelete;

		if (activeRow === uid)
			activeRow = null;

		const idInputs = rows[uid].querySelectorAll('input[name*="[id]"]');
		for (let i = 0, l = idInputs.length; i < l; ++i) {
			const input = idInputs[i];
			input.setAttribute('name', 'paseoDeleteCustom[]');
			customUrls.parentNode.appendChild(input);
		}

		customUrls.removeChild(rows[uid].parentNode);

		delete rows[uid];
	};

	const onFirstFieldInput = function (row, e) {
		const uri = e.target.value = e.target.value.trim();

		row.paseoToggle.textContent = uri || window.paseoCustomLabel;
		row.paseoToggle.setAttribute(
			'title',
			row.paseoToggle.getAttribute('title').split(' ')[0] + ' ' + uri
		);

		row.paseoDelete.setAttribute(
			'title',
			row.paseoDelete.getAttribute('title').split(' ')[0] + ' ' + uri
		);

		for (let i = 0, l = row.paseoInputs.length; i < l; ++i) {
			const input = row.paseoInputs[i];
			const value = input.value.trim();

			if (value === row.paseoPreviousUri || value === '')
				input.value = uri;
		}

		row.paseoPreviousUri = uri;
	};

	const addCustomRow = function () {
		const uid = ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>
			(c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
		);

		const markup = customTmpl.innerHTML
			.replace(/\[\[uid]]/g, uid)
			.replace(/\[\[name]]/g, window.paseoCustomLabel);

		const temp = document.createElement('div');
		temp.innerHTML = markup;

		const row = temp.firstElementChild;

		const toggle = row.querySelector('button[data-paseo-toggle-row]');
		toggle.addEventListener('click', onRowToggleClick.bind(this, toggle));

		const del = row.querySelector('button[data-paseo-delete]');
		del.addEventListener('click', onRowDeleteClick.bind(this, del));

		const input = row.querySelector('tr:first-child input');
		input.addEventListener('input', onFirstFieldInput.bind(this, row));

		row.paseoToggle = toggle;
		row.paseoDelete = del;
		row.paseoInputs = row.querySelectorAll('tr:not(:first-child) input');
		row.paseoPreviousUri = '';

		rows[uid] = row.lastElementChild;

		customUrls.appendChild(row);

		Craft.initUiElements(row);
		onRowToggleClick(toggle);
		input.focus();
	};

	// Init
	// =========================================================================

	for (let i = 0, l = rowExpands.length; i < l; ++i) {
		const row = rowExpands[i];
		rows[row.dataset.paseoRow] = row;
	}

	for (let i = 0, l = rowToggles.length; i < l; ++i) {
		const toggle = rowToggles[i];
		toggle.addEventListener('click', onRowToggleClick.bind(this, toggle));
	}

	const customDeleteBtns = customUrls.querySelectorAll('button[data-paseo-delete]');
	for (let i = 0, l = customDeleteBtns.length; i < l; ++i) {
		const btn = customDeleteBtns[i];
		btn.addEventListener('click', onRowDeleteClick.bind(this, btn));
	}

	const firstUrlInputs = customUrls.querySelectorAll('tr:first-child label input');
	for (let i = 0, l = firstUrlInputs.length; i < l; ++i) {
		const input = firstUrlInputs[i];
		let row = input.parentNode;

		while (row.nodeName.toLowerCase() !== 'li')
			row = row.parentNode;

		row.paseoToggle = row.querySelector('button[data-paseo-toggle-row]');
		row.paseoDelete = row.querySelector('button[data-paseo-delete]');
		row.paseoInputs = row.querySelectorAll('tr:not(:first-child) input');
		row.paseoPreviousUri = input.value;

		input.addEventListener('input', onFirstFieldInput.bind(this, row))
	}

	document.getElementById('paseoAddCustom').addEventListener('click', addCustomRow);

}();
{% endjs %}
